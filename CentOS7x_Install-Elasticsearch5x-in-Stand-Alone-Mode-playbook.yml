---

################################################################################
#  description: Installs Elasticsearch 5x in Stand-Alone Mode on CentOS7x
#  usage: ansible-playbook CentOS7x_Install-Elasticsearch5x-in-Stand-Alone-Mode-playbook.yml --extra-vars 'HostOrGroup=YourServerOrGroupNameGoesHere'
#  author: Ernest G. Wilson II <ErnestGWilsonII@gmail.com> (https://github.com/ernestgwilsonii)
#  license: MIT
################################################################################


# Ansible Playbook options
# REF: http://docs.ansible.com/ansible/playbooks.html
#####################################################

- name: Install Elasticsearch 5x in Stand-Alone Mode on CentOS7x
  hosts: "{{ HostOrGroup|default ('FATAL ERROR --> HostOrGroup NOT SET! You must specify either a Host or a Group name!') }}"
  serial: "100%"
  gather_facts: False
  tasks:


# Install or configure repository used on the OS by yum
# REF: https://docs.ansible.com/ansible/yum_repository_module.html
##################################################################

# /etc/yum.repos.d/elasticsearch.repo
  - name: Install repository Elasticsearch
    yum_repository:
      name: elasticsearch
      description: Elasticsearch repository
      file: elasticsearch
      baseurl: https://artifacts.elastic.co/packages/5.x/yum
      enabled: yes
      gpgcheck: yes
      gpgkey: https://packages.elastic.co/GPG-KEY-elasticsearch


# Install yum packages
# REF: http://docs.ansible.com/ansible/yum_module.html
######################################################

  - name: Install elasticsearch
    yum:
      name=elasticsearch
      state=latest


# Restart firewalld to make sure it is running OK before changing any rules
# REF: http://docs.ansible.com/ansible/service_module.html
##########################################################

  - name: Ensure the firewalld service is enabled and re-started before changing any rules
    service:
      name=firewalld
      enabled=yes
      state=restarted


# Update the firewalld configuration
# REF: http://docs.ansible.com/ansible/firewalld_module.html
############################################################

  - name: Update firewall to allow port TCP 9200 for incoming Elasticsearch connections
    firewalld:
      port=9200/tcp
      permanent=true
      immediate=yes
      state=enabled
      zone=public

  - name: Update firewall to allow port TCP 9300 for incoming Elasticsearch connections
    firewalld:
      port=9300/tcp
      permanent=true
      immediate=yes
      state=enabled
      zone=public


# Use the template module to populate files with data
# REF: http://docs.ansible.com/ansible/template_module.html
###########################################################

# /etc/elasticsearch/elasticsearch.yml
  - name: Fill in the variables and copy templates/Elasticsearch/stand-alone-mode-elasticsearch.yml.j2 to remote /etc/elasticsearch/elasticsearch.yml
    template:
      src=templates/Elasticsearch/stand-alone-mode-elasticsearch.yml.j2
      dest=/etc/elasticsearch/elasticsearch.yml
      owner=root
      group=root
      mode=0644


# Enable and start elasticsearch.service
# REF: http://docs.ansible.com/ansible/service_module.html
##########################################################

  - name: Enable and start the elasticsearch.service service
    service:
      name=elasticsearch.service
      enabled=yes
      state=restarted
      # Note: Command line verification:
      # systemctl status elasticsearch.service
      # systemctl status elasticsearch.service -l
      # service elasticsearch status
      # cat /etc/elasticsearch/elasticsearch.yml
      # cat /var/log/elasticsearch/elasticsearch.log
      # cat /var/log/elasticsearch/elasticsearch_index_search_slowlog.log
      # cat /var/log/elasticsearch/elasticsearch_index_indexing_slowlog.log
      # cat /var/log/elasticsearch/elasticsearch_deprecation.log
      # curl 'localhost:9200/_cat/health?v' # Get health
      # curl 'localhost:9200/_cat/nodes?v' # Get nodes
      # curl 'localhost:9200/_cat/indices?v' # Get indices
      # curl -XGET 'http://localhost:9200/_cluster/health?pretty=true'
      # curl -XGET 'http://localhost:9200/_cluster/state?pretty'
      # curl -XGET http://localhost:9200/_cluster/settings?pretty
      # ss -ntlup | grep 9200
      # ss -ntlup | grep 9300
