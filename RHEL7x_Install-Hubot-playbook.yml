---

################################################################################
#  description: Installs a basic Hubot kit on RHEL7x
#  usage: ansible-playbook RHEL7x_Install-Hubot-playbook.yml --extra-vars 'HostOrGroup=YourServerOrGroupNameGoesHere'
#     or: ansible-playbook RHEL7x_Install-Hubot-playbook.yml --extra-vars 'HostOrGroup=YourServerOrGroupNameGoesHere CLC_V2_API_USERNAME=YourCenturyLinkCloudControlUsername CLC_V2_API_PASSWD=YourCenturyLinkCloudControlPassword HUBOT_SLACK_BOTNAME=YourHubotNameGoesHere HUBOT_SLACK_TOKEN=YourHubotSlackAPITokenKeyGoesHere'
#  author: Ernest G. Wilson II <ErnestGWilsonII@gmail.com> (https://github.com/ernestgwilsonii)
#  license: MIT
################################################################################


# Ansible Playbook options
# REF: http://docs.ansible.com/ansible/playbooks.html
#####################################################

- name: Install a basic Hubot kit on RHEL7x
  hosts: "{{ HostOrGroup|default ('FATAL ERROR --> HostOrGroup NOT SET! You must specify either a Host or a Group name!') }}"
  serial: "100%"
  gather_facts: False
  tasks:


# Create and manage user accounts
# REF: http://docs.ansible.com/ansible/user_module.html
#######################################################

  - name: Add user chatops to the OS so hubot does not run as root
    user:
      name=chatops
      comment="Hubot"
      group=wheel


# Use the file module to create a directory and symbolic links if they don't exist
# REF: http://docs.ansible.com/ansible/file_module.html
##################################################################################

# /opt/chatops
  - name: Create directory /opt/chatops if it does not exist - mkdir -p /opt/chatops
    file:
      path=/opt/chatops
      state=directory
      mode=0755
      owner=chatops
      group=wheel
      recurse=yes

# /opt/chatops/scripts
  - name: Create directory /opt/chatops/scripts if it does not exist - mkdir -p /opt/chatops/scripts
    file:
      path=/opt/chatops/scripts
      state=directory
      mode=0755
      owner=chatops
      group=wheel
      recurse=yes


# Use the template module to populate files with data
# REF: http://docs.ansible.com/ansible/template_module.html
###########################################################

# /etc/systemd/system/chatops.service
  - name: Fill in the variables and copy templates/Hubot/chatops.service.j2 to remote /etc/systemd/system/chatops.service
    template:
      src=templates/Hubot/chatops.service.j2
      dest=/etc/systemd/system/chatops.service
      owner=root
      group=wheel
      mode=0755


# Use the copy module to copy various files into place
# REF: http://docs.ansible.com/ansible/copy_module.html
#######################################################

# /opt/chatops/package.json
  - name: Copy files/Hubot/package.json to remote /opt/chatops/package.json
    copy:
      src=files/Hubot/package.json
      dest=/opt/chatops/package.json
      owner=chatops
      group=wheel
      mode=0644

# /opt/chatops/external-scripts.json
  - name: Copy files/Hubot/external-scripts.json to remote /opt/chatops/external-scripts.json
    copy:
      src=files/Hubot/external-scripts.json
      dest=/opt/chatops/external-scripts.json
      owner=chatops
      group=wheel
      mode=0644

# /opt/chatops/scripts/hubot-clc-diags.js
  - name: Copy files/Hubot/hubot-clc-diags.js to remote /opt/chatops/scripts/hubot-clc-diags.js
    copy:
      src=files/Hubot/hubot-clc-diags.js
      dest=/opt/chatops/scripts/hubot-clc-diags.js
      owner=chatops
      group=wheel
      mode=0755


# Use npm to install and manage Node.js packages
# REF: http://docs.ansible.com/ansible/npm_module.html
######################################################

  - name: Run npm install in /opt/chatops
    npm:
      path=/opt/chatops
      state=latest
      production=yes
      global=no


# Set attributes of files
# REF: http://docs.ansible.com/ansible/file_module.html
#######################################################

# /opt/chatops/chatops.service
  - name: Create a symbolic link - ln -s /etc/systemd/system/chatops.service /opt/chatops/chatops.service
    file:
      src=/etc/systemd/system/chatops.service
      dest=/opt/chatops/chatops.service
      state=link
      owner=root
      group=wheel

  - name: Set directory permisions on /opt/chatops
    file:
      path=/opt/chatops
      state=directory
      owner=chatops
      group=wheel
      recurse=yes


# Enable but do not start chatops.service
# REF: http://docs.ansible.com/ansible/service_module.html
##########################################################

  - name: Enable but do not start the chatops.service service
    service:
      name=chatops.service
      enabled=yes
